{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoComplitedFilter","TodoList","todos","selectedTodoId","onSelect","className","map","todo","id","completed","classnames","title","type","onClick","TodoFilter","query","changeQuery","complitedFilter","setComplitedFilter","onSubmit","e","preventDefault","onChange","event","target","value","All","Active","Completed","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","props","onClose","useState","user","setUser","isLoading","setIsLoading","useEffect","userId","href","email","name","App","setTodos","setSelectedTodoId","setQuery","selectedTodo","useMemo","find","visibleTodos","filter","inputFilter","toLowerCase","includes","trim","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.557aa008.chunk.js","sourcesContent":["export enum TodoComplitedFilter {\n  All,\n  Completed,\n  Active,\n}\n\ninterface Props {\n  query: string;\n  changeQuery: (newQuery: string) => void;\n  complitedFilter: TodoComplitedFilter;\n  setComplitedFilter: (v: TodoComplitedFilter) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  changeQuery,\n  complitedFilter,\n  setComplitedFilter,\n}) => (\n  <form className=\"field has-addons\" onSubmit={e => e.preventDefault()}>\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          onChange={(event) => {\n            setComplitedFilter(+event.target.value);\n          }}\n          value={complitedFilter}\n        >\n          <option value={TodoComplitedFilter.All}>All</option>\n          <option value={TodoComplitedFilter.Active}>Active</option>\n          <option value={TodoComplitedFilter.Completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={event => changeQuery(event.target.value)}\n      />\n\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n      {query !== '' && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              changeQuery('');\n            }}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  selectedTodoId: number | null;\n  onSelect: (id : number) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodoId,\n  onSelect,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered\">\n            <p className={classnames({\n              'has-text-danger': !todo.completed,\n              'has-text-success': todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelect(todo.id)}\n            >\n              <span className=\"icon\">\n                <i className={classnames('far', {\n                  'fa-eye-slash': todo.id === selectedTodoId,\n                  'fa-eye': todo.id !== selectedTodoId,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ninterface Props {\n  todo: Todo;\n  onClose: (v: number | null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = (props) => {\n  const { todo, onClose } = props;\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getUser(todo.userId)\n      .then(setUser);\n    setIsLoading(false);\n  }, [todo.userId, isLoading]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onClose(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoComplitedFilter, TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodoId, setSelectedTodoId] = useState<number | null>(null);\n  const [query, setQuery] = useState('');\n  const [complitedFilter, setComplitedFilter] = useState<TodoComplitedFilter>(TodoComplitedFilter.All);\n\n  const selectedTodo = useMemo(() => (\n    todos.find(todo => todo.id === selectedTodoId) || null\n  ), [selectedTodoId]);\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  const visibleTodos = useMemo(() => (\n    todos.filter(todo => {\n      const inputFilter = todo.title.toLowerCase().includes(query.toLowerCase().trim());\n\n      switch (complitedFilter) {\n        case TodoComplitedFilter.Active:\n          return inputFilter && todo.completed === false;\n\n        case TodoComplitedFilter.Completed:\n          return inputFilter && todo.completed === true;\n\n        default:\n          return inputFilter;\n      }\n    })\n  ), [query, todos, complitedFilter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                changeQuery={setQuery}\n                complitedFilter={complitedFilter}\n                setComplitedFilter={setComplitedFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length && <Loader />}\n              {visibleTodos.length\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodoId={selectedTodoId}\n                    onSelect={setSelectedTodoId}\n                  />\n                )\n                : (\n                  <div>\n                    No todos yet\n                  </div>\n                ) }\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && <TodoModal todo={selectedTodo} onClose={setSelectedTodoId} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}